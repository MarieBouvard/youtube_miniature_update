name: Generate Comment Image

on:
  schedule:
    - cron: "*/20 * * * *"   # Toutes les 20 minutes
  workflow_dispatch:          # Lancement manuel possible

permissions:
  contents: write   # ‚ö†Ô∏è n√©cessaire pour push dans le repo

jobs:
  generate-thumbnail:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # important pour push

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          echo "üì¶ Installation des d√©pendances..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Fetch comments
        id: fetch
        run: |
          echo "üîé R√©cup√©ration des commentaires..."
          python 01_fetch_comments.py || echo "NO_COMMENTS" > no_comments.flag
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          YOUTUBE_VIDEO_ID: ${{ secrets.YOUTUBE_VIDEO_ID }}

      - name: Commit timestamp if no comments
        if: hashFiles('no_comments.flag') != ''
        run: |
          echo "üíæ Commit horodatage seul (aucun commentaire trouv√©)..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -u data/last_update.json
          git commit -m "üïí Mise √† jour horodatage (aucun commentaire trouv√©)" --allow-empty
          git push

      - name: Stop if no new comments
        if: hashFiles('no_comments.flag') != ''
        run: echo "‚ÑπÔ∏è Aucun commentaire valide trouv√© ‚Üí Fin du workflow."

      - name: Select comment
        if: hashFiles('no_comments.flag') == ''
        id: select
        run: |
          echo "üèÜ S√©lection du meilleur commentaire..."
          python 02_select_comment.py || echo "NO_SELECTION" > no_selection.flag

      - name: Stop if no selection
        if: hashFiles('no_selection.flag') != ''
        run: echo "‚ÑπÔ∏è Aucun commentaire s√©lectionn√© ‚Üí Fin du workflow."

      - name: Generate image (Replicate SDXL + montage)
        if: hashFiles('no_comments.flag') == '' && hashFiles('no_selection.flag') == ''
        run: |
          echo "üé® G√©n√©ration et composition de la miniature..."
          python 03_generate_image.py
        env:
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}

      - name: Commit and push results
        if: hashFiles('no_comments.flag') == '' && hashFiles('no_selection.flag') == ''
        run: |
          echo "üíæ Commit et push des r√©sultats..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # -u pour forcer les modifs sur final/last + ajout des nouveaux fichiers archives
          git add -u data/final_thumbnail.png data/last_thumbnail.png data/selected_comments.json data/last_update.json
          git add data/archives/*.png
          git commit -m "üñºÔ∏è Nouvelle miniature finale + mise √† jour des commentaires + horodatage" --allow-empty
          git push

      - name: Wait before upload
        if: hashFiles('no_comments.flag') == '' && hashFiles('no_selection.flag') == ''
        run: |
          echo "‚è≥ Attente de 30 secondes avant upload..."
          sleep 30

      - name: Upload thumbnail to YouTube
        if: hashFiles('no_comments.flag') == '' && hashFiles('no_selection.flag') == ''
        run: |
          echo "‚¨ÜÔ∏è Upload de la miniature vers YouTube..."
          python 04_upload_thumbnail.py
        env:
          YOUTUBE_CLIENT_ID: ${{ secrets.YOUTUBE_CLIENT_ID }}
          YOUTUBE_CLIENT_SECRET: ${{ secrets.YOUTUBE_CLIENT_SECRET }}
          YOUTUBE_REFRESH_TOKEN: ${{ secrets.YOUTUBE_REFRESH_TOKEN }}
          YOUTUBE_VIDEO_ID: ${{ secrets.YOUTUBE_VIDEO_ID }}

      - name: Final summary
        if: always()
        run: |
          echo "=============================="
          if [ -f no_comments.flag ]; then
            echo "üì≠ Fin du workflow : Aucun nouveau commentaire trouv√©."
          elif [ -f no_selection.flag ]; then
            echo "‚ö†Ô∏è Fin du workflow : Impossible de s√©lectionner un commentaire."
          elif [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Fin du workflow : Miniature g√©n√©r√©e, upload√©e et horodatage sauvegard√©."
          else
            echo "‚ùå Fin du workflow : Une erreur est survenue."
          fi
          echo "=============================="
